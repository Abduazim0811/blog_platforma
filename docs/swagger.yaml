definitions:
  posts.CreatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  posts.CreatePostResponse:
    properties:
      id:
        type: integer
    type: object
  posts.Posts:
    properties:
      content:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  users.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  users.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  users.Users:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a Blogs reservation system.
  title: Hotel Booking System
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and get a JWT token
      parameters:
      - description: Login request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/users.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login a user
      tags:
      - user
  /posts:
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post request body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/posts.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.CreatePostResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Create a new post
      tags:
      - post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Delete a post
      tags:
      - post
    get:
      consumes:
      - application/json
      description: Get post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.Posts'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Get post by ID
      tags:
      - post
    put:
      consumes:
      - application/json
      description: Update an existing post
      parameters:
      - description: Post request body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/posts.Posts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Update an existing post
      tags:
      - post
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Users'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Get user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a user
      tags:
      - user
  /users/{id}/posts:
    get:
      consumes:
      - application/json
      description: Get posts created by a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/posts.Posts'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Get posts by user ID
      tags:
      - post
securityDefinitions:
  Bearer:
    description: Enter the token in the format `Bearer {token}`
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
